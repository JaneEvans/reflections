1. When would you want to use a remote repository rather than keeping all your work local?
When I am collobrating with others remotely.
When I want to edit my work but don't have my computer with me.

2. Why might you want to always pull changes manually rather than having Git automatically 
stay up-to-date with your remote repository?
Because sometimes one logical change has multiple changes, and I only want to pull the one logical change as one change 
on GitHub. If Git automatically stay up-to-date the changes will be a mess.

3. Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forks: it's the "clone" between GitHub account
Clones: it happans between GitHub and local Git folder; or between local folders
Branches: it's the labels of commits

4. What is the benefit of having a copy of the last known state of the remote stored locally?
It helps solve the conflicts of push by merging the last known state of the remote and the local locally before pushing
to GitHub

5. How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Without using Git or GitHub, we keep "master" program and then make changes on the copies of the "master" program;
then we decide if we want to update the "master" program with any changes; and go on.
Using Git or GitHub can prevent making copies of the "master" program so that there won't be redundant working files.
Therefore, using Git/GitHug would be easier for project management. In the other hand, using Git/GitHub would be harder
to use because it's not as intuitive as making copies of files (although it's the same idea), we need more time to get
familiar with the use of Git or GitHub.

6. When would you want to make changes in a separate branch rather than directly in master? 
What benefits does each approach have?
When me and my colleagues are making changes on the same file at the same time; 
or when I want to make a separate version but also want to keep the original one.
It will be easier to check the changes if making changes directly in master branch.
It helps solve the conflicts between the changes made by me and my colleagues by making changes in a separate branch.
It also allows me to have different versions without changing the original one.






